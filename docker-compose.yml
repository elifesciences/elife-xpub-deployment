version: '3'

services:
    app:
        image: elifesciences/elife-xpub:${XPUB_VERSION}
        command: >
            /bin/bash -c "
                until echo > /dev/tcp/${PGHOST}/5432; do sleep 1; done
                node app
            "
        ports:
            - 3000:3000
        restart: always
        depends_on:
            - postgres
        environment:
            NODE_ENV: production
            NODE_CONFIG_ENV:
            NODE_CONFIG: '{
                "scienceBeam":{
                    "url":"http://sciencebeam:8075/api/convert"
                },
                "meca": {
                    "s3": {
                        "params": {
                          "Bucket": "${S3_BUCKET}"
                        }
                    }
                }
            }'
            PGHOST:
            PGUSER:
            PGPASSWORD:
            PGDATABASE:
            PGPORT:
            PUBSWEET_BASEURL:
            PUBSWEET_HOSTNAME:
            PUBSWEET_SECRET:
            MECA_SFTP_HOST:
            MECA_SFTP_PORT:
            MECA_SFTP_USERNAME:
            MECA_SFTP_PASSWORD:
            MECA_SFTP_REMOTEPATH:
            MECA_API_KEY:
            NEW_RELIC_ENABLED:
            NEW_RELIC_APP_NAME:
            NEW_RELIC_LICENSE_KEY:
            ELIFE_API_GATEWAY_SECRET:
            MAILER_HOST:
            MAILER_PORT:
            MAILER_AUTH:

    sciencebeam:
        image: elifesciences/sciencebeam:${SCIENCEBEAM_TAG}
        command: ./server.sh \
            --host=0.0.0.0 --port=8075 \
            --grobid-url http://grobid:8070/api
        ports:
        - "8075:8075"
        networks:
        - default
        - sciencebeam-internal
        healthcheck:
            test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/8075"]
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always
        depends_on:
        - grobid

    grobid:
        image: lfoppiano/grobid:${GROBID_TAG}
        environment:
        - JAVA_OPTS=-Xmx1g
        ports:
        - "8070:8070"
        networks:
        - sciencebeam-internal
        healthcheck:
            test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/8070"]
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always

    postgres:
        image: postgres:10
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: ${PGUSER}
            POSTGRES_DB: ${PGDATABASE}
            # https://github.com/docker-library/postgres/issues/681
            POSTGRES_HOST_AUTH_METHOD: trust
        volumes:
            - postgres-volume:/var/lib/postgresql/data
        restart: always

    # useful to run `docker wait ...` to wait for the application outside from the host
    bootstrap:
        image: bash:4.3.48
        command: >
            /usr/local/bin/bash -c "until echo > /dev/tcp/app/3000; do sleep 1; done"
        depends_on:
            - app

volumes:
    postgres-volume:

networks:
    sciencebeam-internal:
        internal: true
